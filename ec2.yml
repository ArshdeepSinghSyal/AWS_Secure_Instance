---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: ec2-user
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: ansible-webserver # Change the security group name here
      image: ami-04cd36852f26a9623 # This is an AMI i created myself
      keypair: my-key # This is one of my keys that i already have in AWS
      region: us-east-2 # Change the Region
      hostpath: "./hosts"
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        ec2: 
          group: "{{ security_group }}"
          instance_type: "{{ instance_type}}" 
          image: "{{ image }}" 
          wait: true 
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          instance_tags:
            Name: webserver
          count_tag:
            Name: webserver
          exact_count: "{{ count }}"
          #assign_public_ip: yes
        register: ec2

      - name: Add new instance to host group
        add_host:
          hostname: "{{ item.public_ip }}"
          groupname: webserver
          ansible_ssh_private_key_file:  "/Users/arsh/Desktop/Z1/{{keypair}}.pem"
          ansible_user: "ec2-user"
        with_items: 
          - "{{ ec2.instances }}"
          - "{{ ec2.tagged_instances }}"
      
      - name: Wait for SSH to come up
        delegate_to: "{{ item.public_dns_name }}"
        wait_for_connection:
          delay: 60
          timeout: 320
        with_items: "{{ ec2.instances }}"


  - name: Install & configure, httpd & metricbeat 
    hosts: webserver
    become: yes
    gather_facts: True
    tags: installation&configuration

    tasks:
      
      - name: install the latest version of Apache
        yum:
          name: 
            - httpd
            - https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-7.0.1-x86_64.rpm
        with_items: 
          - ec2.instances
          - ec2.tagged_instances

      - name: Enable metricbeat to monitor httpd service  
        command: metricbeat modules enable apache
        with_items: 
          - ec2.instances
          - ec2.tagged_instances
      
      - name: Disable metricbeat from monitoring the system
        command: metricbeat modules disable system
        with_items: 
          - ec2.instances
          - ec2.tagged_instances

      - name: Insert output for metricbeat    
        blockinfile:
          path: /etc/metricbeat/metricbeat.yml
          block: |
            output.file:
            path: "/tmp/metricbeat"
            filename: metricbeat
          insertafter: '#ssl.key: "/etc/pki/client/cert.key"'
        with_items: 
          - ec2.instances
          - ec2.tagged_instances
     
      # - name: Comment existing output 1 from metricbeat.yml file     #not working
      #   lineinfile: 
      #     path: /etc/metricbeat/metricbeat.yml
      #     state: absent
      #     regexp:
      #       - 'output\.elasticsearch:'
      #       - 'hosts: \["localhost:9200"\]'
      #   with_items: 
      #     - ec2.instances
      #     - ec2.tagged_instances

      # - name: Comment existing output 1 from metricbeat.yml file     #not working
      #   lineinfile: 
      #     path: /etc/metricbeat/metricbeat.yml
      #     state: absent
      #     line:
      #       - output.elasticsearch:
      #       - hosts: ["localhost:9200"]
      #   with_items: 
      #     - ec2.instances
      #     - ec2.tagged_instances   

      # - name: Comment out existing output for metricbeat    
      #   blockinfile:
      #     path: /etc/metricbeat/metricbeat.yml
      #     marker: "output.elasticsearch:"
      #     content: ""
      #   with_items: 
      #     - ec2.instances
      #     - ec2.tagged_instances
      
      - name: Stop httpd service from running
        systemd:
          state: stopped
          name: httpd
        with_items: 
          - ec2.instances
          - ec2.tagged_instances
      
      - name: Stop metricbeat service from running
        systemd:
          state: stopped
          name: metricbeat
        with_items: 
          - ec2.instances
          - ec2.tagged_instances
        
      - name: Make sure httpd service is running
        systemd:
          state: started
          name: httpd
        with_items: 
          - ec2.instances
          - ec2.tagged_instances
      
      - name: Make sure metricbeat service is running
        systemd:
          state: started
          name: metricbeat
        with_items: 
          - ec2.instances